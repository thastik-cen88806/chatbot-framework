
excluded:
  - Pods
  - IDentitaTests
  - IDentita/AutoGenerated/

#disabled_rules:
#
#  - conditional_returns_on_newline
#  - discouraged_optional_boolean
#  - explicit_acl
#  - explicit_enum_raw_value
#  - explicit_self
#  - explicit_top_level_acl
#  - explicit_type_interface
#  - no_grouping_extension
#  - nslocalizedstring_key
#  - nslocalizedstring_require_bundle
#  - number_separator
#  - object_literal          # to be discussed
#  - optional_enum_case_matching# to be discussed


whitelist_rules:
  - anyobject_protocol                                      # Prefer using AnyObject over class for class-only protocols.
  - array_init                                               # Prefer using Array(seq) over seq.map { $0 } to convert a sequence into an Array.
  - attributes                                               # Attributes should be on their own lines in functions and types, but on the same line as variables and imports.
  - block_based_kvo                                          # Prefer the new block based KVO API with keypaths when using Swift 3.2 or later.
  - class_delegate_protocol                                  # Delegate protocols should be class-only so they can be weakly referenced.
  - closing_brace                                            # Closing brace with closing parenthesis should not have any whitespaces in the middle.
  - closure_body_length --> function length                  # Closure bodies should not span too many lines.
  - closure_end_indentation                                  # Closure end should have the same indentation as the line that started it.
  - closure_parameter_position                               # Closure parameters should be on the same line as opening brace.
  - closure_spacing                                          # Closure expressions should have a single space inside each brace.
  - collection_alignment                                     # All elements in a collection literal should be vertically aligned
  - colon                                                    # Colons should be next to the identifier when specifying a type and next to the key in dictionary literals.
  - comma                                                    # There should be no space before and one after any comma.
  - compiler_protocol_init                                   # The initializers declared in compiler protocols such as ExpressibleByArrayLiteral shouldn't be called directly.
  - contains_over_filter_count                               # Prefer contains over comparing filter(where:).count to 0
  - contains_over_filter_is_empty                            # Prefer contains over using filter(where:).isEmpty
  - contains_over_first_not_nil                              # Prefer contains over first(where:) != nil and firstIndex(where:) != nil.
  - contains_over_range_nil_comparison                       # Prefer contains over range(of:) != nil and range(of:) == nil
  - control_statement                                        # if, for, guard, switch, while, and catch statements shouldn't unnecessarily wrap their conditionals or arguments in parentheses.
  - convenience_type                                         # Types used for hosting only static members should be implemented as a caseless enum to avoid instantiation.
  - deployment_target                                        # Availability checks or attributes shouldn't be using older versions that are satisfied by the deployment target.
  - discarded_notification_center_observer                   # When registering for a notification using a block, the opaque observer that is returned should be stored so it can be removed later.
  - discouraged_direct_init                                  # Discouraged direct initialization of types that can be harmful.
  - discouraged_object_literal                               # Prefer initializers over object literals.
  - discouraged_optional_collection                          # Prefer empty collection over optional collection.
  - duplicate_enum_cases                                     # Enum can't contain multiple cases with the same name.
  - duplicate_imports                                        # Imports should be unique.
  - dynamic_inline                                           # Avoid using 'dynamic' and '@inline(__always)' together.
  - empty_collection_literal                                 # Prefer checking isEmpty over comparing collection to an empty array or dictionary literal.
  - empty_count                                              # Prefer checking isEmpty over comparing count to zero.
  - empty_enum_arguments                                     # Arguments can be omitted when matching enums with associated types if they are not used.
  - empty_parameters                                         # Prefer () -> over Void -> .
  - empty_parentheses_with_trailing_closure                  # When using trailing closures, empty parentheses should be avoided after the method call.
  - empty_string                                            # Prefer checking isEmpty over comparing string to an empty string literal.
  - empty_xctest_method                                     # Empty XCTest method should be avoided.
  - enum_case_associated_values_count                       # Number of associated values in an enum case should be low
  - expiring_todo                                           # TODOs and FIXMEs should be resolved prior to their expiry date.
  - explicit_init                                           # Explicitly calling .init() should be avoided.
  - extension_access_modifier                               # Prefer to use extension access modifiers
  - no_fallthrough_only                                     # Fallthroughs can only be used if the case contains at least one other statement.
  - no_space_in_method_call                                 # Donâ€™t add a space between the method name and the parentheses.
  - notification_center_detachment                          # An object should only remove itself as an observer in deinit.
  - nsobject_prefer_isequal                                 # NSObject subclasses should implement isEqual instead of ==.
  - opening_brace                                           # Opening braces should be preceded by a single space and on the same line as the declaration.
  - operator_usage_whitespace                               # Operators should be surrounded by a single whitespace when they are being used.
  - operator_whitespace                                     # Operators should be surrounded by a single whitespace when defining them.

cyclomatic_complexity:                                      # Complexity of function bodies should be limited.
    - 10
    - 20
